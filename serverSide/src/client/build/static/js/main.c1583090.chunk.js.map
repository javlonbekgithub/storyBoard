{"version":3,"sources":["pages/dashboard/index.module.sass","pages/editor/index.module.sass","components/single-story/index.module.sass","pages/stories/index.module.sass","pages/storyReader/index.module.sass","components/btn/index.module.sass","files/cover.jpg","components/button/index.js","components/input/index.js","helpers.js","api/index.js","components/auth/constants.js","components/auth/login/index.js","components/auth/registr/index.js","components/btn/index.js","store/index.js","components/auth/minidash/index.js","components/auth/index.js","components/home/index.js","components/the-story-day/index.js","components/single-story/index.js","components/search/index.js","store/store.js","pages/stories/index.js","components/categories/index.js","components/subscribe/index.js","components/nav/index.js","pages/firstPage/index.js","pages/editor/index.js","pages/storyReader/index.js","pages/dashboard/index.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Button","props","title","Input","type","getToken","JSON","parse","localStorage","getItem","setToken","token","setItem","stringify","Api","url","data","opts","method","headers","body","fetch","then","res","json","error","alert","console","log","pageNames","login","reg","dashboard","Login","state","email","password","handleChange","target","setState","name","value","handleChangeToDash","comp","handleSubmit","a","length","search","this","className","placeholder","onChange","onClick","React","PureComponent","Registration","observer","rePassword","Btn","to","styles","minidashbuttons","handleChangeToReg","dashbutton","icon","paragh","User","observable","_id","avatar","Stories","loading","setUser","action","user","clear","Minidash","componentDidMount","deleteToken","doNothing","alt","src","Auth","timerID","component","animate","clearInterval","setTimeout","changePage","Home","Random","render","SingleStory","id","handleDelete","cover","content","permisson","eachLI","Limg","storytext","dangerouslySetInnerHTML","__html","managment","pathname","Search","stories","classforsearch","list","searchsmall","e","which","onKeyPress","map","item","i","key","navItems","link","categories","category","history","location","selectCategory","cont","h1","Array","fill","_","Categories","categ","Subscribe","Navigation","index","scrollTo","FirstPage","scrollPage","div","left","behavior","top","window","innerHeight","ref","r","initialState","undefined","open","RichTextEditor","handleSelect","handleOpenSetCover","handleImageUpload","photo","nativeEvent","files","formData","FormData","append","reader","FileReader","readAsDataURL","addEventListener","result","handleOnSave","tmp","updateContent","setRef","jodit","config","readonly","panel","setCover","setCoverCont","covera","htmlFor","editorRef","Component","StoryReader","readerCont","story","sttile","green","Dashboard","header","set","img","Boolean","hostname","match","ReactDOM","path","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1583090.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"dashboard_cont__Q8EGw\",\"dash\":\"dashboard_dash__1fTLh\",\"list\":\"dashboard_list__p1dGP\",\"set\":\"dashboard_set__rwNSi\",\"img\":\"dashboard_img__s0coD\",\"header\":\"dashboard_header__1dtJ8\",\"avatar\":\"dashboard_avatar__bgHDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"editor_cont__3gjXy\",\"panel\":\"editor_panel__2H3BX\",\"setCover\":\"editor_setCover__Wv6go\",\"setCoverCont\":\"editor_setCoverCont__1088h\",\"cover\":\"editor_cover__3gwCs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eachLI\":\"single-story_eachLI__-Y_fc\",\"LI\":\"single-story_LI__3D_cF\",\"managment\":\"single-story_managment__38uZl\",\"storytext\":\"single-story_storytext__2sPhC\",\"Limg\":\"single-story_Limg__3wPfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"stories_cont__3uPg4\",\"dash\":\"stories_dash__E--SH\",\"h1\":\"stories_h1__1_7zu\",\"list\":\"stories_list__vhA3c\",\"categories\":\"stories_categories__2fcr_\",\"open\":\"stories_open__fduIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"readerCont\":\"storyReader_readerCont__1t4IQ\",\"story\":\"storyReader_story__1iPya\",\"anima\":\"storyReader_anima__2iKVC\",\"sttile\":\"storyReader_sttile__DDjpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minidashbuttons\":\"btn_minidashbuttons__1nqDH\",\"dashbutton\":\"btn_dashbutton__VxZFq\"};","module.exports = __webpack_public_path__ + \"static/media/cover.0100a551.jpg\";","import React from 'react'\nimport './index.css'\n\nexport const Button = (props) =>{\n    return (\n        <div \n            {...props}\n        >\n            { props.title }\n        </div>\n    )\n}","import React from 'react'\nimport './index.css'\n\nexport const Input = props => (\n    <input\n       {...props}\n       type={props.type || 'text'}\n    //    className={props.auth?'authinput':'subscrinput'} \n    />         \n)","export const getToken = () => JSON.parse(localStorage.getItem('token'))\n\nexport const setToken = (token = null) => localStorage.setItem('token', JSON.stringify(token))","import { setToken } from \"../helpers\"\n\nexport const Api = (url, data = null, type = 'get') => {\n\n    let opts = {\n        method: type,\n        headers: {'Content-type': 'application/json'},\n    }\n\n    if (data) {\n        opts.body = JSON.stringify(data)\n    }\n\n    return fetch(`http://localhost:3001/api/${url}`, opts)\n        .then(res => res.json())\n        .then(res => {\n            if(res.error) {\n                alert(res.error)\n                console.log('asd')\n                if(res.error === 'invalid_token' || res.error === 'token_expired') {\n                    setToken()   \n                }\n            }else {\n                return res\n            }\n        })\n\n}","export const pageNames = {\n    login:'login',\n    reg:'reg',\n    dashboard:'dashboard'\n}","import React from 'react'\nimport { Button } from '../../button'\nimport { Input } from '../../input'\nimport '../registr/index.css'\nimport { Api } from '../../../api'\nimport { pageNames } from '../constants'\nimport { setToken } from '../../../helpers'\n\n\nexport class Login extends React.PureComponent{ \n\n    state = {\n        email:'',\n        password:''\n    }\n\n    handleChange = ({ target }) => {this.setState({[target.name]:target.value})}\n\n    handleChangeToDash = comp => {this.props.handleChange(comp)}\n\n    handleSubmit = async () => {\n        const { email, password } = this.state\n        \n        if (email.length !== 0 && password.length !== 0 ) {\n            if (email.search('@') < 0) {\n                    alert('email_doesnt_exists')\n                } else {\n                    try {\n                        let res = await Api('login', { email, password }, 'post')\n                        console.log(res)\n                        if (!res.error) {\n                            setToken(res.token)\n                            this.props.handleChange(pageNames.dashboard)\n                        } else {\n                            alert(res.error)\n                        }\n                    } catch(err) {\n                        console.log(err)\n                    }\n                \n            }\n        } else {\n            alert('please_enter_the_data')\n        }\n        \n}\n\n\nrender () {\n    const { email, password } = this.state\nreturn (\n\n    <form className = 'regbg'>\n            <h1>Login</h1>\n            <Input\n                placeholder = 'email'\n                type = 'email'\n                name = 'email'\n                value = { email }\n                className = 'authinput'\n                onChange={this.handleChange}\n            />\n            <Input \n                placeholder = 'password'\n                type = 'password'\n                name = 'password'\n                value = { password }\n                className = 'authinput'\n                onChange={this.handleChange}\n            />\n            <Button\n                title = 'Login'\n                className = 'button'\n                onClick = {this.handleSubmit}\n            />\n            <span\n                onClick={() => this.props.handleChange(pageNames.reg)}\n            >Haven't an account yet?\n            </span>\n         </form>\n)\n}\n}   ","import React from 'react'\nimport { Button } from '../../button'\nimport { Input } from '../../input'\nimport './index.css'\nimport { pageNames } from '../constants'\nimport { Api } from '../../../api'\nimport { observer } from 'mobx-react'\nimport { setToken } from '../../../helpers'\n\n\nexport const Registration = observer( class Registration extends React.PureComponent {  \n    state = {\n        email: '',\n        password: '',\n        rePassword: '',\n    }\n\n    handleChange = ({ target }) => {this.setState({[target.name]:target.value})}\n    \n\n    handleChangeToDash = comp => {this.props.handleChange(comp)}\n    \n    handleSubmit = async () => {\n        const { email, password, rePassword } = this.state\n\n        \n        if (email.length !== 0 && password.length !== 0 && rePassword.length !== 0) {\n            if (email.search('@') < 0) {\n                    alert('email_doesnt_exists')\n                } else {\n                if (password !== rePassword) {\n                    alert('Passwords do not match')\n                } else {\n                    try {\n                        let res = await Api('registration', { email, password }, 'post')\n                        console.log(res)\n                        if (!res.error) {\n                            setToken(res.token)\n                            this.props.handleChange(pageNames.dashboard)\n                        } else {\n                            alert(res.error)\n                        }\n                    } catch(err) {\n                        console.log(err)\n                    }\n                }\n            }\n        } else {\n            alert('please_enter_the_data')\n        }\n        \n}\n\nrender () {\n\n    let { email, password, rePassword } = this.state\nreturn (\n    <form className = 'regbg'>\n        <h1>Registration</h1>\n            <Input \n                placeholder = 'email'\n                type = 'email'\n                name = 'email'\n                className = 'authinput'\n                value={email}\n                onChange={this.handleChange}\n            />\n            <Input \n                placeholder = 'enter a password'\n                type = 'password'\n                name = 'password'\n                className = 'authinput'\n                value={password}\n                onChange={this.handleChange}\n            />\n            <Input \n                placeholder = 'rewrite the password'\n                name = 'rePassword'\n                type = 'password'\n                className = 'authinput'\n                value={rePassword}\n                onChange={this.handleChange}\n            />\n            <Button\n                 title = 'Registrate'\n                 className = 'button'\n                 pageNames = {pageNames.login}\n                 onClick = {this.handleSubmit}\n            />\n            <span\n                onClick={() => this.props.handleChange(pageNames.login)}\n            > Do haven an account ?</span>\n   </form>\n)}})\n","import React from 'react'\nimport { pageNames } from '../auth/constants.js'\nimport { Link } from 'react-router-dom'\nimport styles from './index.module.sass'\n\nexport const Btn = (props) => (\n    <Link to = {props.to} className = 'link'>\n        <div \n            className={styles.minidashbuttons}\n            onClick = {() => props.handleChangeToReg(pageNames.login)}\n        >\n            <div className = {styles.dashbutton}>{props.icon}</div>\n            <p>{props.paragh}</p>\n        </div>\n    </Link>\n)","import { Api } from '../api'\nimport { observable, action } from 'mobx'\nimport { getToken } from '../helpers'\n\nexport const User = observable({\n    _id: '',\n    name: '',\n    email: '',\n    avatar: '',\n    Stories: [],\n    loading: true,\n})\n\nexport const setUser = action(async () => {\n    let user = await Api('user', { token: getToken() }, 'post')\n    if (user) {\n        User._id = user._id\n        User.name = user.name\n        User.email = user.email\n        User.avatar = user.avatar\n        User.Stories = user.Stories\n        User.loading = false\n    } else {\n        localStorage.clear()\n    }\n})","import React from 'react'\nimport './index.css'\nimport { FaPenAlt } from 'react-icons/fa'\nimport { FaSignOutAlt } from 'react-icons/fa'\nimport { MdSettings } from 'react-icons/md'\nimport { Btn } from '../../btn/'\nimport { Button } from '../../button'\nimport { observer } from 'mobx-react'\nimport { User, setUser} from '../../../store'\nimport { setToken } from '../../../helpers'\nimport { Link } from 'react-router-dom'\nimport { pageNames } from '../constants'\n\n\nlet img = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRe1_faOSmA1eOI05HbHvxl-uG8LPJaWb7zP3Kd8dMGurQcNpd_&s'\n\nexport const Minidash = observer ( class Minidash extends React.PureComponent{\n    \n    componentDidMount = async () => {\n        \n        await setUser()\n    }\n\n    deleteToken = () => {\n        localStorage.clear()\n    }\n\n    handleChangeToReg = comp => {\n        this.props.handleChange(comp)\n        setToken()\n        localStorage.clear()\n    }\n    \n    doNothing = () => 0\n    \nrender () { \nreturn User.loading? \n    <p>\n        Loading.....\n        <Link to = '/' className='link'>\n            <Button\n                title = 'go-home'\n                onClick = {this.deleteToken}\n            />\n        </Link>\n    </p>: (\n    <div className = 'mdashbg'>\n        <div className = 'dashitems'>\n            <img \n            className = 'dashava'\n            alt = 'ava'\n            src = { User.avatar }/>\n            <h4>{ User.name }</h4>\n        </div>\n        <div className = 'btnscont' >\n                <Btn\n                    icon = {<FaPenAlt/>}\n                    paragh = {'Editor'}\n                    to = {'/editor'}\n                    handleChangeToReg = {this.doNothing}\n                />\n                <Btn\n                    icon = {<MdSettings/>}\n                    paragh = {'Dashboard'}\n                    to = {'/dashboard'}\n                    handleChangeToReg = {this.doNothing}\n                />\n                <Btn\n                    icon = {<FaSignOutAlt/>}\n                    paragh = {'Logout'}\n                    handleChangeToReg = {this.handleChangeToReg}\n                    to = {'/'}\n                />\n         </div>       \n    </div>\n)}\n})\n","import React from 'react'\nimport './index.css'\nimport { Login } from './login'\nimport { Registration } from './registr'\nimport { Minidash } from './minidash'\nimport { pageNames } from './constants'\nimport { getToken } from '../../helpers'\nimport { User } from '../../store'\n\n\n\nexport class Auth extends React.PureComponent{\n  timerID = null\n  \n    state = {\n        component: getToken()? pageNames.dashboard : pageNames.login,\n        animate: false\n    }\n    handleChange = (comp) => {\n        clearInterval(this.timerID)\n        this.setState({component:comp,animate: true })\n        this.timerID = setTimeout(() => this.setState({animate: false}), 500)\n     }\n    changePage = () => {\n      const { component } = this.state\n      const { dashboard, login, reg } = pageNames\n\n        if (component === login) return (\n        <Login \n        handleChange={this.handleChange}\n        animate = {this.state.animate}\n        handleChange = {this.handleChange}\n        />\n        )      \n        else if(component === reg) return (\n        <Registration \n        handleChange={this.handleChange}\n        animate = {this.state.animate}       \n        />\n      )\n          else if (component === dashboard) return (\n        <Minidash\n        handleChange={this.handleChange}\n        animate = {this.state.animate}\n        />\n          )\n    }\n      \n    \n    \nrender () {\n    return(\n      <form className = {`${'formbg'} ${this.state.animate ? 'animated' : ''}`}>\n        {this.changePage()}\n      </form>\n        )\n}\n\n}","import React from 'react'\r\nimport './index.css'\r\nimport { Auth } from '../auth'\r\n\r\nexport const  Home = () => {\r\n\r\n  return (\r\n    <div className='back'>\r\n      <div className='background'/>\r\n      <Auth/>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\n","import React from 'react'\nimport './index.css'\nimport { Button } from '../button/'\nimport { Link } from 'react-router-dom'\nimport { Api } from '../../api'\n\n\n\nexport class Random extends React.PureComponent {\n    componentDidMount() {\n        // console.log(Api('story'))\n    }\n    render = () => (\n        <div className='randbg'>\n            <div className='randcontent'>\n                <img\n                    src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQhv2rcwuHJqisHjavJMU2w4gAbgepqmxAYOT8edygWrkZrcCbeSg'\n                    alt='asdf'\n                    className='img'\n                >\n                </img>\n                <h1 className='title' >\n                    metro\n                </h1>\n                <p className='text'>\n                Lorem ipsum dolor sit amet consectetur, adipisicing elit. Perferendis nobis consequuntur perspiciatis? Alias maiores odio fugiat vitae atque expedita ducimus, voluptate soluta excepturi nemo blanditiis asperiores vero perferendis quia? Sequi, quo alias! Repudiandae, soluta ad possimus molestias deserunt recusandae! Aliquid eaque eos quibusdam consequuntur nemo ducimus nihil ad blanditiis corrupti!\n                Lorem ipsum dolor sit amet consectetur, adipisicing elit. Perferendis nobis consequuntur perspiciatis? Alias maiores odio fugiat vitae atque expedita ducimus, voluptate soluta excepturi nemo blanditiis asperiores vero perferendis quia? Sequi, quo alias! Repudiandae, soluta ad possimus molestias deserunt recusandae! Aliquid eaque eos quibusdam consequuntur nemo ducimus nihil ad blanditiis corrupti!\n                Lorem ipsum dolor sit amet consectetur, adipisicing elit. Perferendis nobis consequuntur perspiciatis? Alias maiores odio fugiat vitae atque expedita ducimus, voluptate soluta excepturi nemo blanditiis asperiores vero perferendis quia? Sequi, quo alias! Repudiandae, soluta ad possimus molestias deserunt recusandae! Aliquid eaque eos quibusdam consequuntur nemo ducimus nihil ad blanditiis corrupti!\n                \n                             \n                </p>\n                    <Link to = '/storyreader' className='link'>\n                        <div className='rndbtn'>\n                            <Button\n                                className = 'sbscrb'\n                                title = 'Read more'\n                                handleChangeToDash = {()=>0}\n                            />\n                        </div>\n                    </Link>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport styles from './index.module.sass'\nimport { User } from '../../store'\nimport { Button } from '../button'\nimport { Link } from 'react-router-dom'\nimport { Api } from '../../api'\nimport { getToken } from '../../helpers'\n\nexport class SingleStory extends React.PureComponent {\n\n    state = {\n        ...this.props,\n        id: '',\n    }\n\n    handleDelete = (id) => {\n        Api('story',{id, token: getToken()},'delete')\n        // let res = Api('story',{id, token: getToken()},'delete')\n        // console.log(res)\n        this.setState({id})\n    }\n\nrender = () => {\n    const { cover, title, content, permisson, _id, id} = this.state\n    return _id!==id && (\n        <div className={styles.eachLI}> \n            <img \n                src = { cover }\n                alt = 'img'\n                className = { styles.Limg }\n             >\n             </img>\n             <div className = {styles.storytext}>\n                <h1>{ User.name } - { title }</h1> \n                <div dangerouslySetInnerHTML={{ __html: content }}></div>\n             </div>\n             <div className = {styles.managment}>\n                 <Link to = {{\n                     pathname: \"/storyreader\",\n                     state: {...this.state }\n                 }}\n                    className = 'link'\n                 >\n                    <Button\n                        className = 'sbscrb opac'\n                        title = 'read-more'\n                    />\n                 </Link>\n                 {\n                    permisson &&\n                    <Button\n                        className = 'sbscrb opac'\n                        title = 'delete'\n                        onClick = {() => this.handleDelete(_id)}\n                    />    \n                 }\n             </div>\n         </div>\n     )\n}}","import React from 'react'\nimport './index.scss'\nimport { SingleStory } from '../single-story'\nimport { Api } from '../../api'\n\nexport class Search extends React.PureComponent {\n    state ={\n        stories: [],\n        classforsearch:'searchinput',\n        list:false\n    }\n\n    componentDidMount = async () => {\n        this.setState({stories: await Api('story')})\n    }\n\n    searchsmall = (e) => {\n     e.which === 13 && this.setState({\n         classforsearch:'searchinputsmall',\n         list:true\n        })\n        \n    }        \n    \n    render(){\n    return (\n        <div className='searchbg'>\n            <input \n            className={this.state.classforsearch}\n            placeholder='Search'\n            onKeyPress={this.searchsmall}\n            >\n            </input>\n           {this.state.list && <div className='searchItem'>\n            {this.state.stories.map((item, i) => (\n                <SingleStory\n                    key = {i}\n                    {...item}\n                />\n            ))\n            }\n            </div>}\n        </div>\n    )\n}\n}\n","export const navItems = [\r\n    {\r\n        name:'Home',\r\n        link: 'home'\r\n    },\r\n    {\r\n        name:'the Story of day',\r\n        link: 'story'\r\n    },\r\n    {\r\n        name:'Search',\r\n        link: 'search'\r\n    },\r\n    {\r\n        name: 'Categories',\r\n        link: 'categories'\r\n    },\r\n    {\r\n        name: 'Subscribe',\r\n        link:'subscribe'\r\n    }\r\n]\r\nexport const categories = [\r\n    'Action and adventure',\r\n    'Art',\r\n    'Alternate history',\r\n    'Autobiography',\r\n    'Anthology',\r\n    'Biography',\r\n    'Chick lit',\r\n    'Book review',\r\n    'Children\\'s',\r\n    'Cookbook',\r\n    'Comic book',\r\n    'Diary',\r\n    'Coming-of-age',\r\n    'Dictionary',\r\n    'Crime',\r\n    'Encyclopedia',\r\n    'Drama',\r\n    'Guide',\r\n    'Fairytale',\r\n    'Health',\r\n    'Fantasy',\r\n    'History',\r\n    'Graphic novel',\r\n    'Journal',\r\n    'Historical fiction',\r\n    'Math',\r\n    'Horror',\r\n    'Memoir',\r\n    'Mystery',\r\n    'Prayer',\r\n    'Paranormal romance',\r\n    'Religion, spirituality, and new age',\r\n    'Picture book',\r\n    'Textbook',\r\n    'Poetry',\r\n    'Review',\r\n    'Political thriller',\r\n    'Science',\r\n    'Romance',\r\n    'Self help',\r\n    'Satire',\r\n    'Travel',\r\n    'Science fiction',\r\n    'True crime',\r\n    'Short story',\r\n    'Suspense',\r\n    'Thriller',\r\n    'Young adult',\r\n]","import React from 'react'\nimport styles from './index.module.sass'\nimport { SingleStory } from '../../components/single-story'\nimport { categories } from '../../store/store'\nimport { useParams } from 'react-router-dom'\n\nexport class Stories extends React.PureComponent{\n    \n    state = {\n        category:this.props.history.location.state.category\n    }\n    selectCategory = category => this.setState({category})\n\n    render = () => (\n    <div className = {styles.cont}>\n        <h1 className = {styles.h1}>{this.state.category}</h1>\n        <div className = {styles.list}>\n            {new Array(10).fill(0).map((_,i) => (\n                <SingleStory/>\n            ) )}\n        </div>\n        <div className = {styles.categories}>\n            {categories.map((item,i) => (\n                <p \n                onClick = { ()=> this.selectCategory(item)}               \n                >{item}</p>\n            ))}{console.log(this.props.category)}    \n        </div>\n    </div>\n)}","import React from 'react'\nimport './index.css'\nimport {categories} from '../../store/store.js'\nimport { Link } from 'react-router-dom'\nimport { Stories } from '../../pages/stories'\n\nexport class Categories extends React.PureComponent{\n    selectCategory = category => (\n        <Stories\n            category = {category}\n        />\n    )\nrender = () => (\n    <div className='categoriesBg'>\n        <div className='chipsBg'>\n            <div className='categs'>\n            {categories.map((categ) => (\n                <Link to = {{\n                    pathname: \"/stories\",\n                    state: { category: categ }\n                  }} className='link'>\n                    <p \n                    className='catpr'\n                    onClick = {() => this.selectCategory(categ)}\n                    >\n                        {categ}\n                    </p>\n                </Link>\n            ))}\n            </div>\n            </div>\n\n    </div>\n)}","import React from 'react'\nimport './index.css'\nimport { Button } from '../button'\nimport { Input } from '../input'\n\nexport const Subscribe = () => (\n    <div className='subBg'>\n        <Input\n            placeholder = 'add email'\n            type = 'text'\n            className = 'subscrinput'\n        />\n        <Button \n            title='subscribe'\n            className = 'sbscrb'\n        />        \n    </div>\n)","import React from 'react'\r\nimport './index.css'\r\nimport { navItems } from '../../store/store'\r\n\r\nexport const scroll = index => {\r\n  window.scrollTo({\r\n    left:0,\r\n    behavior:'smooth',\r\n    top:index * window.innerHeight\r\n  })\r\n}\r\n\r\nexport const  Navigation = (props) => {\r\n\r\n  return (\r\n     <div className='navbg'>\r\n         <div className='bgItems'>            \r\n          {navItems.map((item,index)=>(\r\n                <a \r\n                className='navItems'\r\n                onClick={()=>props.scrollTo(index)}                \r\n                >\r\n                  {item.name}\r\n                </a>\r\n                ))}\r\n            </div>\r\n     </div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\nimport { Home } from '../../components/home'\nimport { Random } from '../../components/the-story-day'\nimport { Search } from '../../components/search'\nimport { Categories } from '../../components/categories'\nimport { Subscribe } from '../../components/subscribe'\nimport './index.css'\nimport { Navigation } from '../../components/nav'\n\nexport class FirstPage extends React.PureComponent {\n  scrollPage = index => {\n    this.div.scrollTo({\n      left:0,\n      behavior:'smooth',\n      top:index * window.innerHeight\n    })\n  }\n  componentDidMount = () => {\n  }\n\nrender (){\n  return (\n    <div className='fpbg' ref = {(r) => this.div= r}>\n      <Home />\n      <Navigation scrollTo={this.scrollPage} />\n      <Random/>\n      <Search/>\n      <Categories/>\n      <Subscribe/>\n    </div>    \n  )\n}\n}\n\n","// import React, {useState, useRef} from 'react';\n// import JoditEditor from \"jodit-react\";\n\n// export const RichTextEditor = ({}) => {\n// \tconst editor = useRef(null)\n// \tconst [content, setContent] = useState('')\n\t\n// \tconst config = {\n// \t\treadonly: false // all options from https://xdsoft.net/jodit/doc/\n// \t}\n\t\n// \treturn (\n//             <JoditEditor\n//             \tref={editor}\n//                 value={content}\n//                 config={config}\n// \t\ttabIndex={1} // tabIndex of textarea\n// \t\tonBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\n//                 onChange={newContent => {}}\n//             />\n//         );\n// }\n\n\n\nimport React from 'react';\nimport styles from './index.module.sass'\nimport { categories } from '../../store/store'\nimport 'jodit';\nimport 'jodit/build/jodit.min.css';\nimport JoditEditor from \"jodit-react\";\nimport { User, setUser } from '../../store';\nimport { Input } from '../../components/input';\nimport { getToken } from '../../helpers';\nimport { Api } from '../../api';\nimport covera from '../../files/cover.jpg'\n\nlet initialState = {\n    content: '',\n    title: '',\n    category: '',\n    cover: undefined,\n    open: false\n}\n\nexport class RichTextEditor  extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            title: '',\n            category: '',\n            cover: undefined,\n            open: false\n        }\n    }\n\n    handleChange = ({ target }) => {this.setState({[target.name]:target.value})}\n   \n    handleSelect = ({target}) => { this.setState({category: target.value}) }\n        \n    handleOpenSetCover = () => { this.setState({open:!this.state.open}) }\n\n    handleImageUpload = ({ nativeEvent }) => {\n        let photo = nativeEvent.target.files[0]\n        let formData = new FormData()\n        formData.append('photo', photo) // Send form data to BE\n        this.setState({ cover: formData })\n        const reader = new FileReader()\n        reader.readAsDataURL(photo)\n        reader.addEventListener(\n            'load',\n            e => this.setState({ cover: e.target.result }),\n        )\n    }\n\n\n    handleOnSave = async () => {\n        console.log(this.state)\n\n        const { title, cover, category, content } = this.state\n        let tmp = {\n            cover,\n            category,\n            title,\n            content,\n            token: getToken()\n        }\n        try {\n            \n            await Api('story', tmp, 'post')\n            alert('Story has been added')\n            this.setState(initialState)\n\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    componentDidMount = async () => {\n        await setUser()\n        }\n\n    updateContent = (value) => {\n        this.setState({content:value})\n        \n    }\n    /**\n     * @property Jodit jodit instance of native Jodit\n     */\n\tjodit;\n\tsetRef = jodit => this.jodit = jodit;\n\t\n\tconfig = {\n\t\treadonly: false // all options from https://xdsoft.net/jodit/doc/\n    }\n    \n    render() {\n        return (\n            <div className = {styles.cont}>\n                <div className = {styles.panel}>\n                    <Input\n                         placeholder = 'title'\n                         type = 'text'\n                         name = 'title'\n                         value={this.state.title}\n                         onChange={this.handleChange}\n                    />\n                    <div>\n                        select the category\n                        <select \n                           onChange = {this.handleSelect}                    \n                        >\n                        {categories.map(item =>(\n                            <option value = { item }>{ item }</option>\n                        ))}\n                        </select>\n                    </div>\n                    <button onClick = {this.handleOpenSetCover }>\n                        save and set cover\n                    </button>\n                </div>\n                {this.state.open && \n                <div \n                    className = {styles.setCover}\n                >\n                    <div className = {styles.setCoverCont}>\n                        <img src = {this.state.cover||covera} alt = 'photo' className = {styles.cover}/>\n                        <div>\n                            <input type='file' id='fileUploader'onChange = {this.handleImageUpload}/>\n                            <button onClick = {this.handleOnSave}>save</button>\n                            <button><label htmlFor = 'fileUploader'>Add Cover Photo</label></button>\n                        </div>\n                    </div>\n                </div>}\n                <JoditEditor\n                \teditorRef={this.setRef}\n                    value={this.state.content}\n                    config={this.config}\n                    onChange={this.updateContent}\n                />\n                \n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport styles from './index.module.sass'\n\nexport const StoryReader = (props) => {\n    const { cover, content,title } = props.location.state\nreturn(\n        <div className = {styles.readerCont}>\n            <img src = {cover} alt = 'img'/>\n            <div className = {styles.story}>\n                <h1 className = {styles.sttile}>\n                    {title}\n                </h1>\n                <div className = {styles.green} dangerouslySetInnerHTML={{ __html: content }}></div>\n            </div>\n            \n        </div>\n    \n)}\n\nconst text = 'Dasturlarda dinamik malumotlar tuzilmasidan kopincha chiziqli royhatlarelementlarning bog‘lanish usuli va ular ustida bajarilishi mumkin bo‘lgan amallaribilan farqlanadi. Dinamik tuzilmalar massiv va yozuvdan farqli ravishda operatixotirada ketma-ket sohalarda joylashmaydi. Ixtiyoriy dinamik tuzilma elementi2 ta maydondan tashkil topadi: tuzilma tashkil etilishiga sabab bo‘layotgan'","import React from 'react'\nimport styles from './index.module.sass'\nimport { SingleStory } from '../../components/single-story'\nimport { Input } from '../../components/input'\nimport { Button } from '../../components/button'\nimport { observer } from 'mobx-react'\nimport { User, setUser } from '../../store'\nimport { Link } from 'react-router-dom'\n\n// const avatar = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRe1_faOSmA1eOI05HbHvxl-uG8LPJaWb7zP3Kd8dMGurQcNpd_&s'\n\nexport const Dashboard = observer (class Dashboard extends React.PureComponent {  \n\n    componentDidMount = async () => {\n        await setUser()\n    }\nrender () {\n    return User.loading? \n    <p>\n        Loading.... \n        <Link to = '/' className='link'>\n            <Button\n            title = 'go-home'\n            />\n        </Link>\n    </p>:(\n        <div className = {styles.cont}>\n            <div className = {styles.header}>\n                <img \n                    src = { User.avatar } \n                    alt = 'ava'\n                    className = { styles.avatar }    \n                />\n                <p>{ User.name }</p>\n                <h1>\n                    Total { User.Stories.length }\n                </h1>\n            </div>\n            <div className = {styles.list}>\n                {User.Stories.map((item,i) =>(\n                    <SingleStory \n                        key = { i }\n                        permisson = {true}\n                        { ...item}\n                    />\n                )) }\n            </div>\n            <div className = {styles.set}>\n                <img \n                    src = { User.avatar } \n                    alt = 'ava'\n                    className = {styles.img}    \n                />\n                <Button\n                    title = 'Upload avatar'\n                    className = 'sbscrb'\n                />\n                <Input \n                    placeholder = 'Name'\n                    type = 'text'\n                    className = 'authinput'\n                />\n                <p>Change Password</p>\n                <Input \n                    placeholder = 'Old password'\n                    type = 'password'\n                    className = 'authinput'\n                />\n                <Input \n                    placeholder = 'New password'\n                    type = 'password'\n                    className = 'authinput'\n                />  \n                <Input \n                    placeholder = 'Confirm password'\n                    type = 'password'\n                    className = 'authinput'\n                />\n\n            </div>\n        </div>\n    )\n}})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from 'react'\nimport { FirstPage } from './pages/firstPage/'\nimport { BrowserRouter , Route } from 'react-router-dom'\nimport { RichTextEditor } from './pages/editor'\nimport { StoryReader } from './pages/storyReader'\nimport { Dashboard } from './pages/dashboard'\nimport { Stories } from './pages/stories'\n\nexport const App = () => (\n    <BrowserRouter>\n        <Route path = '/' exact component = { FirstPage }/>\n        <Route path = '/editor'  component = { RichTextEditor }/>\n        <Route path = '/dashboard'  component = { Dashboard }/>\n        <Route path = '/stories'  component = { Stories }/>\n        <Route path = '/storyreader'  component = { StoryReader }/>\n\n    </BrowserRouter>\n)"],"sourceRoot":""}